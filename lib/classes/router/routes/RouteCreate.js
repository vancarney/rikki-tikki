// Generated by CoffeeScript 1.9.3
var AbstractRoute, RouteCreate,
  extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
  hasProp = {}.hasOwnProperty;

AbstractRoute = require('../../base_class/AbstractRoute');

RouteCreate = (function(superClass) {
  extend(RouteCreate, superClass);

  function RouteCreate() {
    return RouteCreate.__super__.constructor.apply(this, arguments);
  }

  RouteCreate.prototype.handler = function(callback) {
    return (function(_this) {
      return function(req, res) {
        return _this.handler.insert(function(e, result) {
          return typeof callback === "function" ? callback(res, e != null ? e : result) : void 0;
        });
      };
    })(this);
  };

  return RouteCreate;

})(AbstractRoute);

module.exports = RouteCreate;
