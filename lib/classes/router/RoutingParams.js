// Generated by CoffeeScript 1.10.0
var RoutingParams,
  extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
  hasProp = {}.hasOwnProperty;

RoutingParams = (function(superClass) {
  extend(RoutingParams, superClass);

  function RoutingParams(path, operation) {
    if (path) {
      this.setPath(path);
    }
    if (operation) {
      this.setOperation(operation);
    }
  }

  RoutingParams.prototype.setPath = function(path1) {
    this.path = path1;
    if (!this.path) {
      throw "Path was undefiend";
    }
  };

  RoutingParams.prototype.setOperation = function(operation1) {
    this.operation = operation1;
    switch (this.operation) {
      case 'index':
        return this.method = 'get';
      case 'show':
        return this.method = 'get';
      case 'update':
        return this.method = 'put';
      case 'create':
        return this.method = 'post';
      case 'destroy':
        return this.method = 'delete';
      default:
        delete this.operation;
        throw 'Invalid REST Operation Type';
    }
  };

  return RoutingParams;

})(Object);

module.exports = RoutingParams;
