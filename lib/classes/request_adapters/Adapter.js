// Generated by CoffeeScript 1.9.0
var AbstractAdapter, Adapter,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
  __hasProp = {}.hasOwnProperty;

AbstractAdapter = require('../base_class/AbstractAdapter');

Adapter = (function(_super) {
  __extends(Adapter, _super);

  Adapter.prototype.required = ['app'];

  function Adapter(_at_params) {
    this.params = _at_params;
  }

  Adapter.prototype.addRoute = function(route, method, handler) {
    return this.params.app[method](route, handler || this.responseHandler);
  };

  Adapter.prototype.responseHandler = function(res, data, headers) {
    var header, value;
    if (!headers) {
      res.setHeader('Content-Type', 'application/json');
    } else {
      for (header in headers) {
        value = headers[header];
        res.setHeader(header, value);
      }
    }
    return res.status(data.status).send(data.content ? data.content : "");
  };

  Adapter.prototype.requestHandler = function() {
    return false;
  };

  return Adapter;

})(AbstractAdapter);

module.exports = Adapter;
