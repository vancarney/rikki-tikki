// Generated by CoffeeScript 1.9.3
var APIOptions, RenderableSchema, Schema, Util, _,
  extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
  hasProp = {}.hasOwnProperty;

_ = require('lodash')._;

Util = require('../utils');

Schema = require('./Schema');

APIOptions = require('../config/APIOptions');

RenderableSchema = (function(superClass) {
  extend(RenderableSchema, superClass);

  RenderableSchema.prototype.toJSON = function() {
    return _.clone(this);
  };

  RenderableSchema.prototype.toString = function(spacer) {
    return JSON.stringify(this, RenderableSchema.replacer, spacer);
  };

  RenderableSchema.prototype.toSource = function() {
    var ns, ref, schema;
    ns = (ns = (ref = APIOptions.get('api_namespace')) != null ? ref.concat('.') : void 0) !== '.' ? ns : '';
    schema = JSON.parse(this.toString());
    delete schema.name;
    return _.template(this.__template)({
      name: Util.String.capitalize(this.name),
      schema: schema,
      ns: ns,
      api_path: (APIOptions.get('schema_api_require_path')) || ""
    });
  };

  function RenderableSchema(name, obj, opts) {
    this.name = name;
    if (Util.Object.isOfType(obj, Schema)) {
      _.extend(this, obj);
    } else {
      RenderableSchema.__super__.constructor.call(this, obj, opts);
    }
  }

  return RenderableSchema;

})(Schema);

RenderableSchema.prototype.__template = "// template was undefined";

RenderableSchema.replacer = function(key, value) {
  if ((value != null) && (0 > _.keys(Schema.reserved).indexOf(key))) {
    return Util.Function.toString(value);
  } else {
    return void 0;
  }
};

module.exports = RenderableSchema;
