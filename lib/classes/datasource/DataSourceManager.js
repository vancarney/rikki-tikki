// Generated by CoffeeScript 1.9.0
var APIOptions, DSManager, DataSource, Fleek, Singleton, async, _,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
  __hasProp = {}.hasOwnProperty;

_ = require('lodash')._;

async = require('async');

Singleton = require('../base_class/Singleton');

APIOptions = require('../config/APIOptions');

DSManager = (function(_super) {
  __extends(DSManager, _super);

  DSManager.prototype.defaultDataSource = 'db';

  DSManager.prototype.__ds = {};

  function DSManager() {
    var name, _i, _len, _ref;
    _ref = this.getDSNames();
    for (_i = 0, _len = _ref.length; _i < _len; _i++) {
      name = _ref[_i];
      this.__ds[name] = this.getDataSource(name);
    }
    this;
  }

  DSManager.prototype.getDataSource = function(name) {
    var Fleek, ds, source;
    Fleek = require('../..');
    ds = null;
    if (!(0 <= this.getDSNames().indexOf(name))) {
      name = APIOptions.get('default_datasource');
    }
    if ((ds = this.__ds[name]) == null) {
      if ((source = Fleek.getApp().datasources[name]) != null) {
        ds = this.__ds[name] = new DataSource(name, source);
      }
    }
    return ds || null;
  };

  DSManager.prototype.getDSNames = function() {
    var Fleek, datasources;
    Fleek = require('../..');
    if (typeof (datasources = Fleek.getApp().datasources) !== 'object') {
      throw 'could not retrieve datasources';
    }
    return _.uniq(_.compact(_.map(_.keys(datasources), function(key) {
      return key.toLowerCase();
    })));
  };

  DSManager.prototype.initialize = function(callback) {
    if (typeof arguments[0] !== 'function') {
      throw 'callback required as arguments[0]';
    }
    return async.forEachOf(this.__ds, ((function(_this) {
      return function(ds, k, cB) {
        return ds.connect(cB);
      };
    })(this)), (function(_this) {
      return function(e) {
        return callback.apply(_this, e != null ? [e] : [null, true]);
      };
    })(this));
  };

  return DSManager;

})(Singleton);

module.exports = DSManager;

DataSource = require('./DataSource');

Fleek = null;
