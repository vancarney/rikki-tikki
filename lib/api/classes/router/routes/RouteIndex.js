// Generated by CoffeeScript 1.7.1
var RikkiTikkiAPI, RouteIndex, _,
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

_ = require('underscore')._;

RikkiTikkiAPI = module.parent.exports.RikkiTikkiAPI;

RouteIndex = (function(_super) {
  __extends(RouteIndex, _super);

  function RouteIndex() {
    return RouteIndex.__super__.constructor.apply(this, arguments);
  }

  RouteIndex.prototype.handler = function(callback) {
    return (function(_this) {
      return function(req, res) {
        if (RikkiTikkiAPI.Util.Env.isDevelopment()) {
          _this.createCollection(req.params.collection);
        }
        return _this.__db.getMongoDB().collection(req.params.collection, function(e, collection) {
          return collection.find(_this.sanitize(JSON.parse(req.query.where || "{}")), function(e, results) {
            if (e != null) {
              return typeof callback === "function" ? callback(res, {
                status: 500,
                content: 'failed to execute query'
              }) : void 0;
            }
            return typeof callback === "function" ? callback(res, {
              status: 200,
              content: results
            }) : void 0;
          });
        });
      };
    })(this);
  };

  return RouteIndex;

})(RikkiTikkiAPI.base_classes.AbstractRoute);

module.exports = RouteIndex;
