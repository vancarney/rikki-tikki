// Generated by CoffeeScript 1.7.1
var ConfigLoader, RikkiTikkiAPI,
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

RikkiTikkiAPI = module.parent.exports;

ConfigLoader = (function(_super) {
  __extends(ConfigLoader, _super);

  ConfigLoader.prototype.__config = null;

  function ConfigLoader(_path) {
    if (_path == null) {
      _path = null;
    }
    if (_path == null) {
      _path = module.parent.exports.getFullPath();
    }
    if (module.parent.exports.configExists(_path)) {
      this.load(_path);
    }
  }

  ConfigLoader.prototype.load = function(_path) {
    var e;
    try {
      return this.__config = JSON.parse(fs.readFileSync(_path, {
        encoding: 'utf-8'
      }));
    } catch (_error) {
      e = _error;
      throw Error(e);
    }
  };

  ConfigLoader.prototype.getEnv = function(env) {
    var _ref;
    return ((_ref = this.__config) != null ? _ref[env] : void 0) || null;
  };

  ConfigLoader.prototype.toJSON = function() {
    return this.__config;
  };

  ConfigLoader.prototype.toString = function() {
    return JSON.stringify(this.__config, null, 2);
  };

  return ConfigLoader;

})(Object);

module.exports = ConfigLoader;
