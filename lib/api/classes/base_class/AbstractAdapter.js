// Generated by CoffeeScript 1.7.1
var AbstractAdapter, RikkiTikkiAPI, _;

_ = require('underscore')._;

RikkiTikkiAPI = module.parent.exports.RikkiTikkiAPI;

AbstractAdapter = (function() {
  AbstractAdapter.prototype.required = [];

  function AbstractAdapter(params) {
    this.params = params != null ? params : {};
    if ((RikkiTikkiAPI.Util.Function.getFunctionName(arguments.callee.caller.__super__.constructor)) !== 'AbstractAdapter') {
      throw "AbstractAdapter can not be directly instatiated. Use a subclass instead.";
    }
    _.each(this.required, (function(_this) {
      return function(param) {
        if (!(_this.params.hasOwnProperty(param))) {
          throw Error("required param '" + param + "' was not defined in the adapter params object");
        }
      };
    })(this));
    this;
  }

  AbstractAdapter.prototype.requestHandler = function(req, res) {};

  AbstractAdapter.prototype.responseHandler = function(req, res) {};

  AbstractAdapter.prototype.addRoute = function(route, method, handler) {};

  return AbstractAdapter;

})();

module.exports = AbstractAdapter;
