// Generated by CoffeeScript 1.7.1
var RikkiTikkiAPI, Singleton, Util,
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

RikkiTikkiAPI = module.parent.exports.RikkiTikkiAPI;

Util = RikkiTikkiAPI.Util;

Singleton = (function(_super) {
  __extends(Singleton, _super);

  function Singleton() {
    var cName, isDescended, matchSig;
    cName = RikkiTikkiAPI.Util.Function.getConstructorName(this);
    isDescended = (RikkiTikkiAPI.Util.Function.getFunctionName(arguments.callee.caller.__super__.constructor)) === 'Singleton';
    matchSig = ((function(_this) {
      return function(sig) {
        return (sig.replace(/[\n\t]|[\s]{2,}/g, '')) === ("function () {return this.__instance != null ? this.__instance : this.__instance = new " + cName + "();}");
      };
    })(this))(arguments.callee.caller.caller.toString());
    if (!isDescended || !matchSig || typeof arguments.callee.caller.getInstance !== 'function') {
      throw "" + cName + " is a Singleton. Try creating/accessing with " + cName + ".getInstance()";
    }
  }

  return Singleton;

})(Object);

module.exports = Singleton;
