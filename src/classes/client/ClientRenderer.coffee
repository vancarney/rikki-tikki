{_}           = require 'lodash'
Util          = require '../utils'
ClientOpts    = require '../config/ClientOptions'
class ClientRenderer extends Object
  constructor:->
    try
      (new ClientLoader).load (e, @__API)=>
        throw new Error e if e?
    catch e
      return console.log e
    
    @__template = """
    /*
     * client.js
     * API Client Generated by RikkiTikki
     */
    <%= core_api %>
    (function() {
      var NS = RikkiTikki.createScope('<%=ns%>');
      <% for (var key in opts) { %>
      <% if (opts[key]) { %>NS.<%= key.toUpperCase() %> = <%= typeof opts[key] == 'string' ?  '"'+opts[key]+'"' : opts[key] %>;<% } %><% } %>
    }).call(this);
    """
  toSource:->
    client_opts = new ClientOpts
    ns = unless (ns = client_opts.get 'api_namespace') is undefined or ns is '' then ns else 'Client'
    (_.template @__template) {core_api:@__API, opts:client_opts.valueOf(), ns:ns}
module.exports  = ClientRenderer
ClientLoader    = require './ClientLoader'